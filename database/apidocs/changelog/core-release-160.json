{
  "name": "LoginRadius API Core Release V16.0",
  "description": "Introducing Version 16.0 of the LoginRadius API. This release brings many API experience improvements.",
  "changelog": {
    "ADDED": [
      {
        "text": "Remove Field Value from Profile: You can now use null values to delete a 'field' or an 'object' from array type fieldsâ€™ from userprofile in v2 apis."
      },
      {
        "text": "Delete specific object from array: Now you can delete any specific object from array type fields."
      },
      {
        "text": "Field-Specific Custom Validation Message Hook: You can separate validation messages specific to a field on a single rule."
      },
      {
        "text": "Added Backup Code APIs V2: If 2 Factor Authentication is enabled the user can download a backup code for login."
      },
      {
        "text": "Added get/reset backup code API."
      },
      {
        "text": "Added Social Login APIs to V2 JS."
      },
      {
        "text": "Added Custom Object APIs to V2 JS."
      },
      {
        "text": "Added Security Questions APIs to V2 JS."
      },
      {
        "text": "Added Reset (2FA) 2 Factor Authentication API to V2 JS."
      },
      {
        "text": "Added v2Recaptcha and InvisibleRecaptcha to V2 JS."
      },
      {
        "text": "Added versioning to JS Interface. To get Current JS version use &lt;ObjectName&gt;.version."
      },
      {
        "text": "User Registration Source: The user registration source is stored during a new registration when the registration comes in via our JS Interface, it will save the domain under registration source in V2. The default value is 'API'."
      },
      {
        "text": "Added Login Lockout Feature to V2 JS. After maximum failed login attempts login is locked. Value of MaximumFailedLoginAttempts and LoginLockedType can be set from Admin-console."
      },
      {
        "text": "Login Provider/Registration Provider: Now you can get the Provider name in the Traditional Profile from which user has registered in v2."
      },
      {
        "text": "IsCustomUid: new field to track that the UID is a site UID(provided on your end) or a UID generated by LoginRadius. This flag can only be set using our server side API in V2."
      },
      {
        "text": "Expire Tokens on Password Change: On reset password or change password, all sessions will expire."
      },
      {
        "text": "Only required rule is applicable for password field in login page while on all other pages where password can be set/update all rules can apply."
      },
      {
        "text": "Photo API: There will be an additional property to the response of the API and it will include photos from an album with different dimensions."
      },
      {
        "text": "Optional Fields Prompt in V1 JS: A new option has been added to our V1 - JS Interface to prompt optional fields for first time login."
      },
      {
        "text": "Last Login Location: User profiles will have a new field for last login location, which determines the user's last geographical location."
      },
      {
        "text": "recaptchaV2OnloadCallback: You can now do some action after reCaptcha loads by setting your JS function in this callback and it will execute after loading reCaptcha."
      }
    ],
    "FIXED": [
      {
        "text": "Update userProfile API V2 response: We have changed the response body for updates in our V2 Auth userProfile set of apis."
      },
      {
        "text": "Role Related Change: Roles will be UnAssigned from user if the role is deleted."
      },
      {
        "text": "Solved Nickname issue in V2 JS."
      },
      {
        "text": "Solved IsEmailSubscribed issue in V2 JS."
      },
      {
        "text": "Change option name 'objectName' to 'customObjectName' in V2 JS."
      },
      {
        "text": "Fixed Sott encoding issue in V2 JS."
      }
    ],
    "IMPROVED": [
      {
        "text": "RFC Based Email Validation: Email Validation has been updated to allow RFC based specification email addresses, the email validation process has been updated throughout the core apis."
      },
      {
        "text": "Case Sensitive Username Option: Setting 'AllowCaseSensitiveUserName' equal to true in your JS Interface allows to have case sensitive usernames in your LoginRadius app for both v1 and v2."
      },
      {
        "text": "Subscribe/Unsubscribe Webhook API: You can now use the following parameter names when using the Subscribe and Unsubscribe API calls: api_key, api_secret, target_url as parameters for subscribing on unsubscribing Webhooks."
      },
      {
        "text": "Logout function in JS: New function introduced in our LoginRadiusRaaS.js that handles a complete logout, it removes the SSO session, LocalStorage, and SessionStorage and clears any valid access token"
      }
    ]
  },
  "auther": "Narendra",
  "created_date": "2017-04-25",
  "status": "public"
}
